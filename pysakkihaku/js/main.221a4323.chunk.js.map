{"version":3,"sources":["assets/bus-logo.png","state/reducers/map.ts","state/types.ts","state/reducers/selected-stop.ts","state/reducers/stops.ts","state/reducers/index.ts","api/index.ts","common/hooks/use-previous.ts","types.ts","common/helpers/date.ts","modules/foli-next-departures/index.tsx","modules/foli-departures/index.tsx","common/hooks/use-set-form-value.ts","common/hooks/use-debounce.ts","modules/foli-map/helpers.ts","modules/foli-map/index.tsx","components/input/form-input.tsx","components/input/radio.tsx","components/input/text.tsx","state/actions/index.ts","modules/foli-search-stop/index.tsx","components/card/index.tsx","modules/foli-stop-details/index.tsx","state/selectors/index.ts","views/main.tsx","views/helpers.ts","views/side-nav.tsx","views/top-nav.tsx","views/index.tsx","GoogleAnalytics.js","App.tsx","state/configure-store.ts","serviceWorker.js","index.tsx"],"names":["module","exports","map","state","action","type","showMap","isOpen","selectedStop","stop","stops","combineReducers","form","formReducer","getNextDeparturesByStopId","stopId","req","url","a","axios","get","then","response","data","catch","usePrevious","value","ref","useRef","useEffect","current","SearchType","convertToMS","timestamp","FoliNextDepartures","props","departures","length","className","stop_name","stop_code","v","key","timestamp1","timestamp2","delayedInMinutes","expecteddeparturetime","aimeddeparturetime","differenceInMinutes","Date","lineref","destinationdisplay","format","withRouter","location","stopIdQueryParam","useParams","setFormValue","dispatch","useDispatch","inputId","newValue","formParam","change","useSetFormValue","useState","stopDepartures","setStopDepartures","prevLocationPathname","pathname","debouncedSearchTerm","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","res","result","getNextDepartures","createMarker","pointLocation","marker","Feature","geometry","Point","fromLonLat","lon","lat","markerStyle","Style","image","CircleStyle","radius","fill","Fill","color","stroke","Stroke","width","setStyle","vectorSrc","VectorSource","features","VectorLayer","source","FoliMap","undefined","setMap","mapId","Map","target","layers","TileLayer","OSMSource","view","View","center","zoom","mapRef","getLayers","getArray","slice","forEach","layer","removeLayer","addLayer","getView","setCenter","initMap","stop_lat","stop_lon","id","FormInputRenderer","inputRenderer","input","meta","formInputProps","disabled","label","error","componentProps","name","htmlFor","FormInput","Field","component","children","validate","Radio","options","inputProps","onChange","checked","Text","placeholder","setSelectedStop","show","reduxForm","initialValues","searchType","SearchStopNo","connect","onSearchResultClick","onSearchTypeChange","searchResults","prevSearchType","searchStopPlaceholder","searchStopLabel","SearchStopName","onClick","Card","headerTitle","content","actionText","onAction","onShowMap","title","getStopParam","R","getSearchType","getSelectedStop","getGTFSStop","gtfsStops","getShowMap","getSearchResults","searchParam","Object","keys","filter","item","toLowerCase","startsWith","k","Helmet","role","path","exact","to","getSideNavStops","FoliSideNav","sideNavStops","sort","b","cityStops","FoliTopNav","href","src","logo","alt","data-toggle","data-target","aria-controls","aria-expanded","aria-label","FoliContainer","GoogleAnalytics","this","logPageChange","search","prevLocation","isDifferentPathname","isDifferentSearch","page","window","console","log","ReactGA","set","origin","pageview","Component","isGAEnabled","process","initialize","store","composedEnhancers","composeWithDevTools","createStore","rootReducer","configureStore","App","basename","GA","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.221a4323.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bus-logo.e7db1f10.png\";","import {StoreState} from '../store-state';\r\nimport {SHOW_MAP, MapActionTypes} from '../types';\r\n\r\nconst map = (state: StoreState, action: MapActionTypes) => {\r\n  switch (action.type) {\r\n    case SHOW_MAP:\r\n      return {...state, showMap: action.isOpen};\r\n    default:\r\n      return {...state}; // OR just \"state\"\r\n  }\r\n};\r\nexport default map;\r\n","import {Stop} from '../types';\r\n\r\nexport const GET_STOPS = 'GET_STOPS';\r\nexport const SET_SELECTED_STOP = 'SET_SELECTED_STOP';\r\nexport const SHOW_MAP = 'SHOW_MAP';\r\n\r\nexport interface GetStopsAction {\r\n  type: typeof GET_STOPS;\r\n}\r\n\r\nexport interface SetSelectedStopAction {\r\n  type: typeof SET_SELECTED_STOP;\r\n  stop: Stop | undefined;\r\n}\r\n\r\nexport interface ShowMapAction {\r\n  type: typeof SHOW_MAP;\r\n  isOpen: boolean;\r\n}\r\n\r\nexport type StopActionTypes = GetStopsAction | SetSelectedStopAction;\r\nexport type MapActionTypes = ShowMapAction;\r\n","import {StoreState} from '../store-state';\r\nimport {SET_SELECTED_STOP, StopActionTypes} from '../types';\r\n\r\nconst selectedStop = (state: StoreState, action: StopActionTypes) => {\r\n  switch (action.type) {\r\n    case SET_SELECTED_STOP:\r\n      return action.stop ? {...state, ...action.stop} : {};\r\n    default:\r\n      return {...state};\r\n  }\r\n};\r\nexport default selectedStop;\r\n","import {StoreState} from '../store-state';\r\nimport {GET_STOPS, StopActionTypes} from '../types';\r\n\r\nconst stops = (state: StoreState, action: StopActionTypes) => {\r\n  switch (action.type) {\r\n    case GET_STOPS:\r\n      return state;\r\n    default:\r\n      return [];\r\n  }\r\n};\r\nexport default stops;\r\n","import {combineReducers} from 'redux';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport map from './map';\r\nimport selectedStop from './selected-stop';\r\nimport stops from './stops';\r\n\r\nexport default combineReducers({stops, selectedStop, map, form: formReducer});\r\n","import axios from 'axios';\r\n/*\r\n    SEE: http://data.foli.fi/doc/siri/v0/sm\r\n*/\r\nexport const getNextDeparturesByStopId = (stopId: string) =>\r\n  req(`http://data.foli.fi/siri/sm/${stopId}`);\r\n\r\nconst req = async (url: string) =>\r\n  axios\r\n    .get(url)\r\n    .then(response => response.data)\r\n    .catch(() => undefined);\r\n","import {useRef, useEffect} from 'react';\r\nexport const usePrevious = <T>(value: T): T | undefined => {\r\n  const ref = useRef<T>();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n};\r\n","export interface StopMonitoringStop {\r\n  recordedattime: number;\r\n  lineref: string;\r\n  dataframeref: Date;\r\n  datedvehiclejourneyref: string;\r\n  directionname: string;\r\n  originref: string;\r\n  destinationref: string;\r\n  originaimeddeparturetime: number;\r\n  destinationaimedarrivaltime: number;\r\n  monitored: boolean;\r\n  incongestion: boolean;\r\n  longitude: number;\r\n  latitude: number;\r\n  delay: number;\r\n  blockref: string;\r\n  vehicleref: string;\r\n  visitnumber: number;\r\n  vehicleatstop: boolean;\r\n  destinationdisplay: string;\r\n  aimedarrivaltime: number;\r\n  expectedarrivaltime: number;\r\n  aimeddeparturetime: number;\r\n  expecteddeparturetime: number;\r\n}\r\n\r\nexport interface Stop {\r\n  stop_code: string;\r\n  stop_name: string;\r\n  stop_lat: number;\r\n  stop_lon: number;\r\n  zone_id: string;\r\n  stop_timezone: string;\r\n}\r\n\r\nexport interface LonLat {\r\n  lon: number;\r\n  lat: number;\r\n}\r\n\r\nexport enum SearchType {\r\n  SearchStopNo = 'searchStopNo',\r\n  SearchStopName = 'searchStopName'\r\n}\r\n","import {format, differenceInMinutes} from 'date-fns';\r\n\r\nconst convertToMS = (timestamp: number) => timestamp * 1000;\r\n\r\nexport const getFoliDepartureTime = (timestamp: number) =>\r\n  format(new Date(timestamp * 1000), 'HH:mm');\r\n\r\nexport const getMinutesToDeparture = (timestamp: number) =>\r\n  differenceInMinutes(new Date(convertToMS(timestamp)), new Date());\r\n\r\nexport const getAimedExpectedDifference = (timestamp1: number, timestamp2: number) =>\r\n  differenceInMinutes(new Date(convertToMS(timestamp1)), new Date(convertToMS(timestamp2)));\r\n","import React from 'react';\r\nimport {getAimedExpectedDifference, getFoliDepartureTime} from '../../common/helpers/date';\r\nimport {Stop, StopMonitoringStop} from '../../types';\r\n\r\ntype Props = {\r\n  title?: string;\r\n  children?: JSX.Element[];\r\n  departures: StopMonitoringStop[];\r\n  selectedStop: Stop;\r\n};\r\n\r\nconst FoliNextDepartures = (props: Props) => {\r\n  const {departures, selectedStop} = props;\r\n  if (departures.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={'row pt-3'}>\r\n      <div className={'col-12'}>\r\n        <p className={''}>Lähtöajat ovat aikataulun mukaisia lähtöaikoja.</p>\r\n        <div className={'d-flex justify-content-between'}>\r\n          <div>\r\n            <p className=\"mb-3\">\r\n              {`Seuraavat lähdöt pysäkiltä:`}\r\n              <br />\r\n              <span className=\"font-weight-bold\">{`${selectedStop.stop_name} (#${selectedStop.stop_code})`}</span>\r\n            </p>\r\n          </div>\r\n          <div className={'d-flex align-items-end'}>\r\n            <p className=\"small font-italic\">*Myöhässä</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-striped table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>{`Linja`}</th>\r\n                <th>{`Määränpää`}</th>\r\n                <th>{`Lähtöaika`}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {departures.map((v, key) => {\r\n                const delayedInMinutes = getAimedExpectedDifference(\r\n                  v.expecteddeparturetime,\r\n                  v.aimeddeparturetime\r\n                );\r\n                return (\r\n                  <tr key={key} className={delayedInMinutes > 0 ? 'table-danger' : ''}>\r\n                    <td>{v.lineref}</td>\r\n                    <td>{v.destinationdisplay}</td>\r\n                    <td>\r\n                      <div className={'d-flex justify-content-between'}>\r\n                        {getFoliDepartureTime(v.aimeddeparturetime)}\r\n                        {delayedInMinutes > 0 && (\r\n                          <span className={'text-danger'}> *{`${delayedInMinutes} min`}</span>\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FoliNextDepartures;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {withRouter} from 'react-router';\r\nimport {RouteComponentProps, useParams} from 'react-router-dom';\r\nimport {getNextDeparturesByStopId} from '../../api';\r\nimport useDebounce from '../../common/hooks/use-debounce';\r\nimport {usePrevious} from '../../common/hooks/use-previous';\r\nimport useSetFormValue from '../../common/hooks/use-set-form-value';\r\nimport {SearchType, Stop, StopMonitoringStop} from '../../types';\r\nimport FoliNextDepartures from '../foli-next-departures';\r\n\r\ntype Props = {\r\n  searchType: SearchType;\r\n  selectedStop: Stop | undefined;\r\n} & RouteComponentProps;\r\n\r\nconst FoliDepartures = (props: Props) => {\r\n  const {selectedStop, location} = props;\r\n  const {stopIdQueryParam} = useParams();\r\n  const setFormValue = useSetFormValue();\r\n  const [stopDepartures, setStopDepartures] = useState<StopMonitoringStop[]>([]);\r\n  const prevLocationPathname = usePrevious(location.pathname);\r\n\r\n  const stopId = selectedStop ? selectedStop.stop_code : '';\r\n\r\n  const debouncedSearchTerm = useDebounce(stopId, 500);\r\n\r\n  useEffect(() => {\r\n    const getNextDepartures = async () => {\r\n      if (stopId && selectedStop) {\r\n        const res = await getNextDeparturesByStopId(stopId);\r\n        const departures: StopMonitoringStop[] = res ? res.result : [];\r\n        setStopDepartures(departures);\r\n      } else {\r\n        setStopDepartures([]);\r\n      }\r\n    };\r\n\r\n    getNextDepartures();\r\n  }, [debouncedSearchTerm, selectedStop, stopId]);\r\n\r\n  useEffect(() => {\r\n    if (location.pathname !== prevLocationPathname) {\r\n      setFormValue('searchType', 'searchStopNo', 'searchStop');\r\n      setTimeout(() => setFormValue('stopId', stopIdQueryParam, 'searchStop'));\r\n    }\r\n  });\r\n\r\n  if (!selectedStop) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={'mb-2'}>\r\n      <FoliNextDepartures departures={stopDepartures} selectedStop={selectedStop} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(FoliDepartures);\r\n","import {useDispatch} from 'react-redux';\r\nimport {change} from 'redux-form';\r\n\r\nexport default function useSetFormValue() {\r\n  const dispatch = useDispatch();\r\n  return (inputId: string, newValue: any = null, formParam: string) =>\r\n    dispatch(change(formParam, inputId, newValue));\r\n}\r\n","import {useState, useEffect} from 'react';\r\n\r\n// Our hook\r\nexport default function useDebounce(value: string | undefined, delay: number) {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(\r\n    () => {\r\n      // Set debouncedValue to value (passed in) after the specified delay\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value);\r\n      }, delay);\r\n\r\n      // Return a cleanup function that will be called every time ...\r\n      // ... useEffect is re-called. useEffect will only be re-called ...\r\n      // ... if value changes (see the inputs array below).\r\n      // This is how we prevent debouncedValue from changing if value is ...\r\n      // ... changed within the delay period. Timeout gets cleared and restarted.\r\n      // To put it in context, if the user is typing within our app's ...\r\n      // ... search box, we don't want the debouncedValue to update until ...\r\n      // ... they've stopped typing for more than 500ms.\r\n      return () => {\r\n        clearTimeout(handler);\r\n      };\r\n    },\r\n    // Only re-call effect if value changes\r\n    // You could also add the \"delay\" var to inputs array if you ...\r\n    // ... need to be able to change that dynamically.\r\n    [value, delay]\r\n  );\r\n\r\n  return debouncedValue;\r\n}\r\n","import {Feature, Map, View} from 'ol';\r\nimport {Point} from 'ol/geom';\r\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer';\r\nimport BaseLayer from 'ol/layer/Base';\r\nimport {fromLonLat} from 'ol/proj';\r\nimport {OSM as OSMSource, Vector as VectorSource} from 'ol/source';\r\nimport {Circle as CircleStyle, Fill, Stroke, Style} from 'ol/style';\r\nimport {LonLat} from '../../types';\r\n\r\nconst MAP_CENTER_LAT = 60.4501;\r\nconst MAP_CENTER_LON = 22.26759;\r\n\r\nexport const initMap = (mapRef: Map, pointLocation: LonLat) => {\r\n  if (!mapRef) return;\r\n\r\n  mapRef\r\n    .getLayers()\r\n    .getArray()\r\n    .slice(1)\r\n    .forEach((layer: BaseLayer) => {\r\n      mapRef.removeLayer(layer);\r\n    });\r\n\r\n  mapRef.addLayer(createMarker(pointLocation));\r\n  mapRef.getView().setCenter(fromLonLat([pointLocation.lon, pointLocation.lat]));\r\n\r\n  return mapRef;\r\n};\r\n\r\nexport const createMap = (mapId: string) =>\r\n  new Map({\r\n    target: mapId,\r\n    layers: [\r\n      new TileLayer({\r\n        source: new OSMSource()\r\n      })\r\n    ],\r\n    view: new View({\r\n      center: fromLonLat([MAP_CENTER_LON, MAP_CENTER_LAT]),\r\n      zoom: 18\r\n    })\r\n  });\r\n\r\nexport const createMarker = (pointLocation: LonLat) => {\r\n  const marker = new Feature({\r\n    geometry: new Point(fromLonLat([pointLocation.lon, pointLocation.lat]))\r\n  });\r\n\r\n  const markerStyle = new Style({\r\n    image: new CircleStyle({\r\n      radius: 7,\r\n      fill: new Fill({color: '#FF0000'}),\r\n      stroke: new Stroke({\r\n        color: '#FF0000',\r\n        width: 5\r\n      })\r\n    })\r\n  });\r\n\r\n  marker.setStyle(markerStyle);\r\n\r\n  const vectorSrc = new VectorSource({features: [marker]});\r\n  const markerVectorLayer = new VectorLayer({source: vectorSrc});\r\n  return markerVectorLayer;\r\n};\r\n","import {Map} from 'ol';\r\nimport React, {useEffect, useState} from 'react';\r\nimport {Stop} from '../../types';\r\nimport {createMap, initMap} from './helpers';\r\n\r\ntype Props = {\r\n  selectedStop: Stop | undefined;\r\n};\r\n\r\nconst MAP_ID = 'folimap';\r\n\r\nconst FoliMap = (props: Props) => {\r\n  const {selectedStop} = props;\r\n  const [map, setMap] = useState<Map | undefined>(undefined);\r\n\r\n  useEffect(() => {\r\n    setMap(createMap(MAP_ID));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (map) {\r\n      if (!selectedStop) {\r\n        return;\r\n      }\r\n\r\n      setMap(initMap(map, {lat: selectedStop.stop_lat, lon: selectedStop.stop_lon}));\r\n    }\r\n  }, [selectedStop, map]);\r\n\r\n  return (\r\n    <div className={'row'}>\r\n      <div className={'col'}>\r\n        <div id={MAP_ID} className=\"map\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FoliMap;\r\n","import React from 'react';\r\nimport {Field, WrappedFieldProps} from 'redux-form';\r\nimport {InputProps, FormInputProps} from './types';\r\n\r\ntype Props = {\r\n  inputRenderer: (props: InputProps) => JSX.Element;\r\n  formInputProps: FormInputProps;\r\n} & WrappedFieldProps;\r\n\r\nconst FormInputRenderer = ({inputRenderer, input, meta, formInputProps}: Props) => {\r\n  const {id, disabled, label} = formInputProps;\r\n  const error = meta.error as string;\r\n\r\n  const componentProps: InputProps = {\r\n    ...input,\r\n    id: input.name,\r\n    disabled,\r\n    color: error ? 'danger' : undefined,\r\n    [`data-testid`]: input.name\r\n  };\r\n\r\n  return (\r\n    <div className={'form-group'}>\r\n      <label className={'font-weight-bold'} htmlFor={id}>\r\n        {label}\r\n      </label>\r\n      {inputRenderer(componentProps)}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FormInput = (props: FormInputProps & {children: (props: InputProps) => JSX.Element}) => {\r\n  return (\r\n    <Field\r\n      id={props.id}\r\n      name={props.id}\r\n      component={FormInputRenderer}\r\n      formInputProps={props}\r\n      inputRenderer={props.children}\r\n      validate={props.validate}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import React from 'react';\r\nimport FormInput from './form-input';\r\nimport {InputProps} from './types';\r\n\r\ntype RadioOptionKey = 'id' | 'label';\r\n\r\ntype Props = {\r\n  id: string;\r\n  label: string;\r\n  name: string;\r\n  options: Record<RadioOptionKey, string>[];\r\n};\r\n\r\nconst Radio = (props: Props) => {\r\n  const {options, name} = props;\r\n  return (\r\n    <FormInput {...props}>\r\n      {(inputProps: InputProps) => (\r\n        <div className={'radio-wrapper'}>\r\n          {options.map(v => (\r\n            <div className=\"custom-control custom-radio custom-control-inline\" key={v.id}>\r\n              <input\r\n                id={v.id}\r\n                name={name}\r\n                value={v.id}\r\n                className=\"custom-control-input\"\r\n                type=\"radio\"\r\n                onChange={inputProps.onChange}\r\n                checked={inputProps.value === v.id}\r\n              />\r\n              <label className=\"custom-control-label\" htmlFor={v.id}>\r\n                {v.label}\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </FormInput>\r\n  );\r\n};\r\n\r\nexport default Radio;\r\n","import React from 'react';\r\nimport FormInput from './form-input';\r\nimport {InputProps} from './types';\r\n\r\ntype Props = {\r\n  id: string;\r\n  label: string;\r\n  placeholder?: string;\r\n};\r\n\r\nconst Text = (props: Props) => (\r\n  <FormInput {...props}>\r\n    {(inputProps: InputProps) => (\r\n      <input\r\n        className=\"form-control form-control-lg\"\r\n        type=\"text\"\r\n        placeholder={props.placeholder}\r\n        {...inputProps}\r\n      />\r\n    )}\r\n  </FormInput>\r\n);\r\n\r\nexport default Text;\r\n","import {Stop} from '../../types';\r\nimport {\r\n  GetStopsAction,\r\n  GET_STOPS,\r\n  SetSelectedStopAction,\r\n  SET_SELECTED_STOP,\r\n  ShowMapAction,\r\n  SHOW_MAP\r\n} from '../types';\r\n\r\nexport const getStops = (): GetStopsAction => ({type: GET_STOPS});\r\n\r\nexport const setSelectedStop = (stop: Stop | undefined): SetSelectedStopAction => ({\r\n  type: SET_SELECTED_STOP,\r\n  stop\r\n});\r\n\r\nexport const showMap = (show: boolean): ShowMapAction => ({type: SHOW_MAP, isOpen: show});\r\n","import React, {Dispatch, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {change, reduxForm} from 'redux-form';\r\nimport {usePrevious} from '../../common/hooks/use-previous';\r\nimport Radio from '../../components/input/radio';\r\nimport Text from '../../components/input/text';\r\nimport {setSelectedStop, showMap} from '../../state/actions';\r\nimport {SearchType, Stop} from '../../types';\r\n\r\ntype Props = {\r\n  searchType: string;\r\n  searchResults: Stop[];\r\n  onSearchResultClick: (stop: Stop) => void;\r\n  onSearchTypeChange: () => void;\r\n};\r\n\r\nconst FoliSearchStop = (props: Props) => {\r\n  const {searchType, searchResults, onSearchResultClick, onSearchTypeChange} = props;\r\n  const prevSearchType = usePrevious(searchType);\r\n\r\n  const searchStopPlaceholder =\r\n    searchType === SearchType.SearchStopNo ? 'Hae pysäkin numerolla..' : 'Hae pysäkin nimellä..';\r\n  const searchStopLabel =\r\n    searchType === SearchType.SearchStopNo ? 'Pysäkin numero' : 'Pysäkin nimi';\r\n\r\n  useEffect(() => {\r\n    if (searchType !== prevSearchType) {\r\n      onSearchTypeChange();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className={'row mb-2'}>\r\n      <div className={'col-12'}>\r\n        <Radio\r\n          name={'searchType'}\r\n          id={'searchType'}\r\n          label={'Hae pysäkin'}\r\n          options={[\r\n            {id: SearchType.SearchStopNo, label: 'numerolla'},\r\n            {id: SearchType.SearchStopName, label: 'nimellä'}\r\n          ]}\r\n        />\r\n      </div>\r\n      <div className={'col-12'}>\r\n        <Text id={'stopId'} placeholder={searchStopPlaceholder} label={searchStopLabel} />\r\n      </div>\r\n      {searchResults && (\r\n        <div className={'col-12'}>\r\n          <div className={'list-group'}>\r\n            {searchResults.map(v => (\r\n              <button\r\n                key={v.stop_code}\r\n                type=\"button\"\r\n                className={'list-group-item list-group-item-action'}\r\n                onClick={() => {\r\n                  onSearchResultClick(v);\r\n                }}\r\n              >\r\n                {`${v.stop_name} (#${v.stop_code})`}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default reduxForm<any, any>({\r\n  form: 'searchStop',\r\n  initialValues: {searchType: SearchType.SearchStopNo}\r\n})(\r\n  connect(null, (dispatch: Dispatch<any>) => ({\r\n    onSearchResultClick: (stop: Stop) => {\r\n      dispatch(setSelectedStop(stop));\r\n      dispatch(change('searchStop', 'stopId', ''));\r\n    },\r\n    onSearchTypeChange: () => {\r\n      dispatch(setSelectedStop(undefined));\r\n      dispatch(change('searchStop', 'stopId', ''));\r\n      dispatch(showMap(false));\r\n    }\r\n  }))(FoliSearchStop)\r\n);\r\n","import React from 'react';\r\n\r\ntype Props = {\r\n  headerTitle: string;\r\n  title: string;\r\n  content: React.ReactNode;\r\n  actionText: string;\r\n  children?: JSX.Element[];\r\n  onAction: () => void;\r\n};\r\n\r\nconst Card = (props: Props) => {\r\n  const {headerTitle, content, actionText, onAction} = props;\r\n  return (\r\n    <div className=\"card\">\r\n      <h5 className=\"card-header bg-info text-white\">{headerTitle}</h5>\r\n      <div className=\"card-body\">\r\n        {/**<h5 className=\"card-title\">{props.title}</h5> */}\r\n        {content && <p className=\"card-text\">{content}</p>}\r\n        <button className=\"btn btn-secondary\" onClick={onAction}>\r\n          {actionText}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, {Dispatch} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Card from '../../components/card';\r\nimport {showMap} from '../../state/actions';\r\nimport {Stop} from '../../types';\r\n\r\ntype Props = {\r\n  selectedStop: Stop | undefined;\r\n  showMap: boolean;\r\n  onShowMap: (show: boolean) => void;\r\n};\r\n\r\nconst FoliStopDetails = (props: Props) => {\r\n  const {selectedStop, showMap, onShowMap} = props;\r\n\r\n  return (\r\n    <div className={'row mb-2'}>\r\n      {selectedStop && (\r\n        <div className={'col-12'}>\r\n          {selectedStop.stop_code && (\r\n            <Card\r\n              headerTitle={`${selectedStop.stop_name} (#${selectedStop.stop_code})`}\r\n              title={'Pysäkin tiedot'}\r\n              content={''}\r\n              actionText={showMap ? 'Piiloita kartta' : 'Näytä kartalla'}\r\n              onAction={() => onShowMap(!showMap)}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, (dispatch: Dispatch<any>) => ({\r\n  onShowMap: (show: boolean) => {\r\n    dispatch(showMap(show));\r\n  }\r\n}))(FoliStopDetails);\r\n","import * as R from 'ramda';\r\nimport gtfsStops from '../../dev-data/stops.json';\r\nimport {SearchType, Stop} from '../../types';\r\nimport {StoreState} from '../store-state';\r\n\r\nexport const getStopParam = (state: StoreState) =>\r\n  R.pathOr<string>('', ['searchStop', 'values', 'stopId'], state.form);\r\n\r\nexport const getSearchType = (state: StoreState) =>\r\n  R.pathOr<SearchType>(SearchType.SearchStopNo, ['searchStop', 'values', 'searchType'], state.form);\r\n\r\nexport const getSelectedStop = (state: StoreState) => {\r\n  const st = getSearchType(state);\r\n  if (st === SearchType.SearchStopNo) {\r\n    return getGTFSStop(getStopParam(state));\r\n  } else {\r\n    return state.selectedStop;\r\n  }\r\n};\r\n\r\nexport const getGTFSStop = (stopId: string) => {\r\n  const stops: {[key: string]: Stop} = gtfsStops;\r\n  return stops[stopId] ? stops[stopId] : undefined;\r\n};\r\n\r\nexport const getShowMap = (state: StoreState) => state.map.showMap;\r\n\r\nexport const getSearchResults = (state: StoreState) => {\r\n  const stops: {[key: string]: Stop} = gtfsStops;\r\n  const searchParam = getStopParam(state);\r\n\r\n  const rv = Object.keys(stops)\r\n    .filter(\r\n      item =>\r\n        searchParam.length > 2 &&\r\n        stops[item].stop_name.toLowerCase().startsWith(searchParam.toLowerCase())\r\n    )\r\n    .map(k => stops[k]);\r\n\r\n  return rv;\r\n};\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport FoliDepartures from '../modules/foli-departures';\r\nimport FoliMap from '../modules/foli-map';\r\nimport FoliSearchStop from '../modules/foli-search-stop';\r\nimport FoliStopDetails from '../modules/foli-stop-details';\r\nimport {getSearchResults, getSearchType, getSelectedStop, getShowMap} from '../state/selectors';\r\nimport {StoreState} from '../state/store-state';\r\nimport {SearchType, Stop} from '../types';\r\nimport {Helmet} from 'react-helmet';\r\n\r\ntype Props = {\r\n  selectedStop: Stop | undefined;\r\n  showMap: boolean;\r\n  searchResults: Stop[];\r\n  searchType: SearchType;\r\n};\r\n\r\nconst FoliMain = (props: Props) => {\r\n  const {searchType, searchResults, selectedStop, showMap} = props;\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{`Pysäkkihaku - ${selectedStop?.stop_name}`}</title>\r\n        <meta name=\"description\" content={`Pysäkkiaikataulu - ${selectedStop?.stop_name} `} />\r\n      </Helmet>\r\n      <main id=\"foliMain\" role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\r\n        <div className={'row'}>\r\n          <div className={'col-lg-4'}>\r\n            <FoliSearchStop searchType={searchType} searchResults={searchResults} />\r\n            <FoliStopDetails showMap={showMap} selectedStop={selectedStop} />\r\n          </div>\r\n          <div className={'col'}>{showMap && <FoliMap selectedStop={selectedStop} />}</div>\r\n        </div>\r\n\r\n        <Switch>\r\n          <Route\r\n            path={'/pysakki/:stopIdQueryParam'}\r\n            children={<FoliDepartures searchType={searchType} selectedStop={selectedStop} />}\r\n          ></Route>\r\n          <Route path=\"/\" exact>\r\n            <Redirect to=\"/pysakki/1\" />\r\n          </Route>\r\n        </Switch>\r\n        <p className={'font-italic'}>\r\n          Lähde: Turun seudun joukkoliikenteen liikennöinti- ja aikatauludata. Aineiston ylläpitäjä\r\n          on Turun kaupungin joukkoliikennetoimisto. Aineisto on ladattu palvelusta\r\n          http://data.foli.fi/ lisenssillä Creative Commons Nimeä 4.0 Kansainvälinen (CC BY 4.0).\r\n        </p>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect((state: StoreState) => ({\r\n  selectedStop: getSelectedStop(state),\r\n  showMap: getShowMap(state),\r\n  searchType: getSearchType(state),\r\n  searchResults: getSearchResults(state)\r\n}))(FoliMain);\r\n","import {Stop} from '../types';\r\n\r\nexport const getSortedStops = (): any[] => {\r\n  const bbb = getSideNavStops().sort((a: any, b: any) => {\r\n    if (!a || !b) {\r\n      return 0;\r\n    }\r\n\r\n    if (a.stop_name < b.stop_name) return -1;\r\n\r\n    if (a.stop_name > b.stop_name) return 1;\r\n\r\n    return 0;\r\n  });\r\n\r\n  return bbb;\r\n};\r\n\r\nexport const getCityStops = (): Partial<Stop>[] => {\r\n  return [\r\n    {\r\n      stop_code: 'T1'\r\n    },\r\n    {\r\n      stop_code: 'T2'\r\n    },\r\n    {\r\n      stop_code: 'T3'\r\n    },\r\n    {\r\n      stop_code: 'T4'\r\n    },\r\n    {\r\n      stop_code: 'T11'\r\n    },\r\n    {\r\n      stop_code: 'T12'\r\n    },\r\n    {\r\n      stop_code: 'T13'\r\n    },\r\n    {\r\n      stop_code: 'T14'\r\n    },\r\n    {\r\n      stop_code: 'T41'\r\n    },\r\n    {\r\n      stop_code: 'T42'\r\n    },\r\n    {\r\n      stop_code: 'T82'\r\n    },\r\n    {\r\n      stop_code: 'T83'\r\n    },\r\n    {\r\n      stop_code: 'T84'\r\n    },\r\n    {\r\n      stop_code: 'T85'\r\n    },\r\n    {\r\n      stop_code: 'T86'\r\n    },\r\n    {\r\n      stop_code: 'T87'\r\n    },\r\n    {\r\n      stop_code: 'T89'\r\n    }\r\n  ];\r\n};\r\n\r\nexport const getSideNavStops = (): Partial<Stop>[] => {\r\n  return [\r\n    {\r\n      stop_name: 'Satama',\r\n      stop_code: '1'\r\n    },\r\n    {\r\n      stop_name: 'Föri',\r\n      stop_code: '294'\r\n    },\r\n    {\r\n      stop_name: 'Kupittaan palloiluhalli',\r\n      stop_code: '1044'\r\n    },\r\n    {\r\n      stop_name: 'Tykistökatu',\r\n      stop_code: '340'\r\n    },\r\n    {\r\n      stop_name: 'Kupittaan asema',\r\n      stop_code: '870'\r\n    },\r\n    {\r\n      stop_name: 'Köydenpunojankatu',\r\n      stop_code: '889'\r\n    },\r\n    {\r\n      stop_name: 'Yliopisto (TYKS U-sairaala)',\r\n      stop_code: '115'\r\n    },\r\n    {\r\n      stop_name: 'Tuomiokirkkotori',\r\n      stop_code: '1824'\r\n    },\r\n    {\r\n      stop_name: 'Turun linja-autoasema',\r\n      stop_code: '41'\r\n    }\r\n  ];\r\n};\r\n\r\nexport const getSideNavStops2 = (): any[] => {\r\n  return [\r\n    [\r\n      {\r\n        stop_name: 'Föri',\r\n        stop_code: '294'\r\n      },\r\n      {\r\n        stop_name: 'Föri',\r\n        stop_code: '340'\r\n      }\r\n    ]\r\n  ];\r\n};\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {getCityStops, getSortedStops} from './helpers';\r\n\r\nconst FoliSideNav = () => {\r\n  const sideNavStops = getSortedStops();\r\n  const cityStops = getCityStops();\r\n  return (\r\n    <nav className=\"col-md-2 d-none d-md-block bg-light sidebar\">\r\n      <div className=\"sidebar-sticky\">\r\n        <ul className=\"nav flex-column\">\r\n          {sideNavStops.map((v) => (\r\n            <li className=\"nav-item\" key={v.stop_code}>\r\n              <Link to={`/pysakki/${v.stop_code}`} className={'nav-link'}>\r\n                {`${v.stop_name} (#${v.stop_code})`}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n          <li className=\"nav-item\">\r\n            <p className={'nav-link city-stop-text'}>Keskustan bussipysäkit</p>\r\n            {cityStops.map((v) => (\r\n              <li className=\"nav-item\" key={v.stop_code}>\r\n                <Link to={`/pysakki/${v.stop_code}`} className={'nav-link city-stop-link'}>\r\n                  {`#${v.stop_code}`}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default FoliSideNav;\r\n","import React from 'react';\r\nimport logo from '../assets/bus-logo.png';\r\n\r\nconst FoliTopNav = () => (\r\n  <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top pt-0 pb-0\">\r\n    <a className=\"navbar-brand\" href=\"http://pysakil.fi\">\r\n      <span className={'mr-2'}>Fölin pysäkkiaikataulut</span>\r\n      <img src={logo} className={'logo'} alt={'Folin pysäkkiaikataulut'} />\r\n    </a>\r\n    <button\r\n      className=\"navbar-toggler\"\r\n      type=\"button\"\r\n      data-toggle=\"collapse\"\r\n      data-target=\"#navbarText\"\r\n      aria-controls=\"navbarText\"\r\n      aria-expanded=\"false\"\r\n      aria-label=\"Toggle navigation\"\r\n    >\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n      <ul className=\"navbar-nav mr-auto\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"http://pysakil.fi\">\r\n            Etusivu\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item active\">\r\n          <a className=\"nav-link\" href=\"http://pysakil.fi/pysakkihaku\">\r\n            Pysäkkihaku\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n);\r\n\r\nexport default FoliTopNav;\r\n","import React from 'react';\r\nimport FoliMain from './main';\r\nimport FoliSideNav from './side-nav';\r\nimport FoliTopNav from './top-nav';\r\n\r\nconst FoliContainer = () => (\r\n  <>\r\n    <FoliTopNav />\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <FoliSideNav />\r\n        <FoliMain />\r\n      </div>\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default FoliContainer;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactGA from 'react-ga';\r\nimport {Route} from 'react-router-dom';\r\n\r\nclass GoogleAnalytics extends Component {\r\n  componentDidMount() {\r\n    this.logPageChange(this.props.location.pathname, this.props.location.search);\r\n  }\r\n\r\n  componentDidUpdate({location: prevLocation}) {\r\n    const {\r\n      location: {pathname, search}\r\n    } = this.props;\r\n    const isDifferentPathname = pathname !== prevLocation.pathname;\r\n    const isDifferentSearch = search !== prevLocation.search;\r\n\r\n    if (isDifferentPathname || isDifferentSearch) {\r\n      this.logPageChange(pathname, search);\r\n    }\r\n  }\r\n\r\n  logPageChange(pathname, search = '') {\r\n    const page = pathname + search;\r\n    const {location} = window;\r\n    console.log('PAGE CHANGE', page);\r\n    ReactGA.set({\r\n      page,\r\n      location: `${location.origin}${page}`,\r\n      ...this.props.options\r\n    });\r\n    ReactGA.pageview(page);\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nGoogleAnalytics.propTypes = {\r\n  location: PropTypes.shape({\r\n    pathname: PropTypes.string,\r\n    search: PropTypes.string\r\n  }).isRequired,\r\n  options: PropTypes.object\r\n};\r\n\r\nconst RouteTracker = () => <Route component={GoogleAnalytics} />;\r\n\r\nconst init = (options = {}) => {\r\n  const isGAEnabled = process.env.NODE_ENV === 'production';\r\n\r\n  if (isGAEnabled) {\r\n    ReactGA.initialize('UA-162844818-1');\r\n  }\r\n\r\n  return isGAEnabled;\r\n};\r\n\r\nexport default {\r\n  GoogleAnalytics,\r\n  RouteTracker,\r\n  init\r\n};\r\n","import {createBrowserHistory} from 'history';\nimport React from 'react';\nimport ReactGA from 'react-ga';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport configureStore from './state/configure-store';\nimport FoliContainer from './views';\nimport GA from './GoogleAnalytics';\n\nconst store = configureStore();\n\nconst App = () => {\n  return (\n    <Router basename={'/pysakkihaku'}>\n      {GA.init() && <GA.RouteTracker />}\n      <Provider store={store}>\n        <FoliContainer />\n      </Provider>\n    </Router>\n  );\n};\n\nexport default App;\n","import {createStore} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport rootReducer from './reducers';\r\nexport default function configureStore() {\r\n  const composedEnhancers = composeWithDevTools(...[]);\r\n  const store = createStore(rootReducer, undefined, composedEnhancers);\r\n  return store;\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'jquery'; //DO WE NEED THIS HERE?\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'ol/ol.css';\nimport './index.css';\nimport './views/root.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}